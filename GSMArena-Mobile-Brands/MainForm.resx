<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStripSc.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>7, 3</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>32</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AD//8AB///Af///wH///8B////Af///wP/8=
</value>
  </data>
</root>