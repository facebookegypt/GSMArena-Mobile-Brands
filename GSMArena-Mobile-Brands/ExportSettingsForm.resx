<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>